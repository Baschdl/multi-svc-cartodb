user nginx;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
}

http {
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;


    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    log_format main '[$time_local] $status REQUEST: "$request" REFERER: "$http_referer" FWD_FOR "$http_x_forwarded_for" PROXY_HOST: "$proxy_host" UPSTREAM_ADDR: "$upstream_addr"';

    gzip on;

    server {
        listen 80;
        server_name {{{stack_fqdn}}};

        return 301 https://{{{stack_fqdn}}}$request_uri;
    }

    server {
      listen {{{stack_listen_port}}} ssl http2;
      server_name   {{{stack_fqdn}}};       # MUSTACHE

      ssl_certificate       /etc/ssl/osscarto-multi.localhost.crt;
      ssl_certificate_key   /etc/ssl/osscarto-multi.localhost.key;
      ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
      ssl_prefer_server_ciphers   on;
      ssl_ciphers           ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

      client_max_body_size  0;
      client_header_buffer_size 32k;
      large_client_header_buffers 4 32k;
      http2_max_field_size 32k;
      http2_max_header_size 64k;

      location ~* /(user/.*/)?api/v1/maps {
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_pass              {{{cartodb_scheme}}}://{{{cartodb_host}}}:{{{cartodb_listen_port}}};   # MUSTACHE
      }

      location ~* /(user/.*/)?api/v1/map {
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Carto-Service windshaft; # tell varnish what backend
        proxy_no_cache          true;           # Make sure nginx doesn't cache
        proxy_cache_bypass      true;           # Make sure nginx doesn't cache
        proxy_pass  {{{varnish_scheme}}}://{{{varnish_host}}}:{{{varnish_http_port}}};  # MUSTACHE
      }

      location ~* /(user/.*/)?api/v2/sql {
        # RedHog: Hack to work around bug in cartodb local hosting but using cdn for js libs
        rewrite /(user/.*)?/api/v2/sql(.*) /$1/api/v2/sql$2  break;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Carto-Service sqlapi; # tell varnish what backend
        proxy_no_cache          true;           # make sure nginx doesn't cache
        proxy_cache_bypass      true;           # make sure nginx doesn't cache
        proxy_pass  {{{varnish_scheme}}}://{{{varnish_host}}}:{{{varnish_http_port}}};  # MUSTACHE
      }

      location / {
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_pass {{{cartodb_scheme}}}://{{{cartodb_host}}}:{{{cartodb_listen_port}}}; # MUSTACHE
      }

      location ^~ /assets {
        root /public;
      }

      # Part of fixing CORS problems for fonts on a CDN
      location ~* \.(eot|otf|ttf|woff|woff2)$ {
        add_header Access-Control-Allow-Origin *;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_pass {{{cartodb_scheme}}}://{{{cartodb_host}}}:{{{cartodb_listen_port}}}; # MUSTACHE
      }

      error_log /var/log/nginx/cartodb_error.log;
      access_log /var/log/nginx/cartodb_access.log main;
    }
}
